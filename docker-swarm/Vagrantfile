# -*- mode: ruby -*-
# vi: set ft=ruby :

require 'yaml'

current_dir = File.dirname(File.expand_path(__FILE__))
servers = YAML.load_file("#{current_dir}/inventory.yaml")
leader = servers.find { |favor| favor['hostname'] == 'manager-1' }

group = "Docker Swarm"

Vagrant.configure("2") do |config|
  servers.each do |machine|
    config.vm.define machine['hostname'] do |node|
        node.vm.box = machine['image']
        node.vm.hostname = machine['hostname']
        node.vm.network :private_network, ip: machine['ip']
        node.vm.provider :virtualbox do |vb|
          vb.customize ["modifyvm", :id, "--groups", "/#{group}/#{machine['role']}"]
          vb.name = machine['hostname']
          vb.memory = machine['ram']
          vb.cpus = machine['cpus']
        end
    end
  end

  servers.each do |machine|
    config.vm.provision "Setup hosts", type: :shell, :args => [machine['ip'], machine['hostname']], inline: <<-SHELL
      sudo echo "$1  $2"  >> /etc/hosts
    SHELL
  end

  config.vm.provision "Setup repositories", type: :shell, privileged: true, inline: <<-SHELL
    sed -i s/mirror.centos.org/vault.centos.org/g /etc/yum.repos.d/CentOS-*.repo
    sed -i s/^mirrorlist=http/#mirrorlist=http/g /etc/yum.repos.d/CentOS-*.repo
    sed -i s/^#.*baseurl=http/baseurl=http/g /etc/yum.repos.d/CentOS-*.repo
    yum clean all
  SHELL

  config.vm.provision "Install Docker", type: :docker

  config.vm.provision "Run Redis cache", type: :docker do |d|
    d.run "redis",
      cmd: "--bind 0.0.0.0",
      args: "-p 0.0.0.0:6379:6379"
  end

  config.vm.define "manager-1" do |node|
    node.vm.provision "Swarm init", type: :shell, privileged: true, :args => [leader['ip'], leader['availability']],
      inline: "docker swarm init --advertise-addr $1 --availability $2 || true"

    node.vm.provision "Save join-tokens", type: :shell, privileged: true,
      inline: <<-SHELL
        docker exec redis redis-cli set manager-join-token $(docker swarm join-token manager -q)
        docker exec redis redis-cli set worker-join-token $(docker swarm join-token worker -q)
      SHELL
  end

  servers.select { |favor| favor['hostname'] != 'manager-1' }.each do |machine|
    config.vm.define machine['hostname'] do |node|
      node.vm.provision "Add a #{machine['role']} to the swarm", type: :shell, privileged: true, 
        :args => [leader['ip'], machine['role'].downcase, machine['availability']],
        inline: <<-SHELL
          token=$(docker exec redis redis-cli -h $1 get $2-join-token)
          docker swarm join --availability $3 --token $token $1 || true
        SHELL
    end
  end
end